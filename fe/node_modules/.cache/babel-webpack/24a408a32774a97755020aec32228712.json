{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/rotem.levi/Downloads/CakesShoppingOnline_/CakesShoppingOnline_/fe/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { environment } from 'src/environments/environment';\nimport ProductModel from '../models/product.model';\nimport { productsDownloadedAction } from '../redux/products-state';\nimport store from '../redux/store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductsService {\n  constructor(http) {\n    this.http = http;\n  } // Get all products: \n\n\n  getAllProducts() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (store.getState().productsState.products.length === 0) {\n        const products = yield _this.http.get(environment.productsUrl).toPromise();\n        store.dispatch(productsDownloadedAction(products));\n      }\n\n      return store.getState().productsState.products;\n    })();\n  } // Get one product: \n\n\n  getOneProduct(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (store.getState().productsState.products.length === 0) {\n        const products = yield _this2.http.get(environment.productsUrl).toPromise();\n        store.dispatch(productsDownloadedAction(products));\n      }\n\n      const product = store.getState().productsState.products.find(p => p.id === id);\n      return product;\n    })();\n  } // Add product: \n\n\n  addProduct(product) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const myFormData = ProductModel.convertToFormData(product);\n      const addedProduct = yield _this3.http.post(environment.productsUrl, myFormData).toPromise(); // store.dispatch(productAddedAction(addedProduct));\n\n      return addedProduct;\n    })();\n  } // Update product: \n\n\n  updateProduct(product) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const myFormData = ProductModel.convertToFormData(product);\n      const updatedProduct = yield _this4.http.patch(environment.productsUrl + product.id, myFormData).toPromise(); // store.dispatch(productUpdatedAction(updatedProduct));\n\n      return updatedProduct;\n    })();\n  } // Delete product: \n\n\n  deleteProduct(id) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this5.http.delete(environment.productsUrl + id).toPromise(); // store.dispatch(productDeletedAction(id));\n    })();\n  }\n\n}\n\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/rotem.levi/Downloads/CakesShoppingOnline_/CakesShoppingOnline_/fe/src/app/services/products.service.ts"],"names":["environment","ProductModel","productsDownloadedAction","store","i0","i1","ProductsService","constructor","http","getAllProducts","getState","productsState","products","length","get","productsUrl","toPromise","dispatch","getOneProduct","id","product","find","p","addProduct","myFormData","convertToFormData","addedProduct","post","updateProduct","updatedProduct","patch","deleteProduct","delete","ɵfac","ProductsService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport ProductModel from '../models/product.model';\r\nimport { productsDownloadedAction } from '../redux/products-state';\r\nimport store from '../redux/store';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class ProductsService {\r\n    constructor(http) {\r\n        this.http = http;\r\n    }\r\n    // Get all products: \r\n    async getAllProducts() {\r\n        if (store.getState().productsState.products.length === 0) {\r\n            const products = await this.http.get(environment.productsUrl).toPromise();\r\n            store.dispatch(productsDownloadedAction(products));\r\n        }\r\n        return store.getState().productsState.products;\r\n    }\r\n    // Get one product: \r\n    async getOneProduct(id) {\r\n        if (store.getState().productsState.products.length === 0) {\r\n            const products = await this.http.get(environment.productsUrl).toPromise();\r\n            store.dispatch(productsDownloadedAction(products));\r\n        }\r\n        const product = store.getState().productsState.products.find(p => p.id === id);\r\n        return product;\r\n    }\r\n    // Add product: \r\n    async addProduct(product) {\r\n        const myFormData = ProductModel.convertToFormData(product);\r\n        const addedProduct = await this.http.post(environment.productsUrl, myFormData).toPromise();\r\n        // store.dispatch(productAddedAction(addedProduct));\r\n        return addedProduct;\r\n    }\r\n    // Update product: \r\n    async updateProduct(product) {\r\n        const myFormData = ProductModel.convertToFormData(product);\r\n        const updatedProduct = await this.http.patch(environment.productsUrl + product.id, myFormData).toPromise();\r\n        // store.dispatch(productUpdatedAction(updatedProduct));\r\n        return updatedProduct;\r\n    }\r\n    // Delete product: \r\n    async deleteProduct(id) {\r\n        await this.http.delete(environment.productsUrl + id).toPromise();\r\n        // store.dispatch(productDeletedAction(id));\r\n    }\r\n}\r\nProductsService.ɵfac = function ProductsService_Factory(t) { return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient)); };\r\nProductsService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ProductsService, factory: ProductsService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}